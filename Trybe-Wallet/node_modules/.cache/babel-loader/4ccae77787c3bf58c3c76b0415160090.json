{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Refatra\\xE7\\xE3o-Projetos/sd-07-project-trybewallet/src/components/HeaderWallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { sumExpense } from '../actions/index';\nimport './HeaderWallet.css';\n\nclass HeaderWallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sumEx: 0\n    };\n  }\n\n  sumExpensesTotal() {\n    const {\n      expenses,\n      sigleCurrence,\n      sumExpenses\n    } = this.props;\n    const filterCurrence = Object.values(sigleCurrence).filter(item => item.name !== 'Dólar Turismo');\n    const sum = expenses.map(item => {\n      return parseFloat(filterCurrence.find(currence => currence.code === item.currency).ask) * parseFloat(item.value);\n    }).reduce((acc, reduce) => acc + reduce, 0);\n    sumExpenses(sum);\n    return sum;\n  }\n\n  render() {\n    const {\n      email\n    } = this.props;\n    const convert = this.sumExpensesTotal().toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL'\n    });\n    return /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"Email:\", email), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"Total: \", convert), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"BRL\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n  sigleCurrence: state.wallet.currencies,\n  sumExp: state.wallet.sumExpenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sumExpenses: sum => dispatch(sumExpense(sum))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderWallet);","map":{"version":3,"sources":["/home/guilherme/Refatração-Projetos/sd-07-project-trybewallet/src/components/HeaderWallet.js"],"names":["React","connect","sumExpense","HeaderWallet","Component","constructor","props","state","sumEx","sumExpensesTotal","expenses","sigleCurrence","sumExpenses","filterCurrence","Object","values","filter","item","name","sum","map","parseFloat","find","currence","code","currency","ask","value","reduce","acc","render","email","convert","toLocaleString","style","mapStateToProps","user","wallet","currencies","sumExp","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,oBAAP;;AACA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAIDC,EAAAA,gBAAgB,GAAG;AACf,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,aAAZ;AAA2BC,MAAAA;AAA3B,QAA2C,KAAKN,KAAtD;AACA,UAAMO,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAcJ,aAAd,EAA6BK,MAA7B,CAAqCC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,eAA5D,CAAvB;AAEA,UAAMC,GAAG,GAAGT,QAAQ,CAACU,GAAT,CAAcH,IAAD,IAAU;AAC/B,aAAOI,UAAU,CAACR,cAAc,CAACS,IAAf,CAAqBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,KAAkBP,IAAI,CAACQ,QAAzD,EAAmEC,GAApE,CAAV,GAAqFL,UAAU,CAACJ,IAAI,CAACU,KAAN,CAAtG;AACH,KAFW,EAETC,MAFS,CAEF,CAACC,GAAD,EAAMD,MAAN,KAAiBC,GAAG,GAAGD,MAFrB,EAE6B,CAF7B,CAAZ;AAGAhB,IAAAA,WAAW,CAACO,GAAD,CAAX;AACA,WAAOA,GAAP;AACH;;AACDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKzB,KAAvB;AACA,UAAM0B,OAAO,GAAG,KAAKvB,gBAAL,GAAwBwB,cAAxB,CAAuC,OAAvC,EAAgD;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBT,MAAAA,QAAQ,EAAE;AAA/B,KAAhD,CAAhB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqCM,KAArC,CADJ,eAEI;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsCC,OAAtC,CAFJ,eAGI;AAAG,qBAAY,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CADJ;AAOH;;AA/BsC;;AAiC3C,MAAMG,eAAe,GAAI5B,KAAD,KAAY;AAChCwB,EAAAA,KAAK,EAAExB,KAAK,CAAC6B,IAAN,CAAWL,KADc;AAEhCrB,EAAAA,QAAQ,EAAEH,KAAK,CAAC8B,MAAN,CAAa3B,QAFS;AAGhCC,EAAAA,aAAa,EAAEJ,KAAK,CAAC8B,MAAN,CAAaC,UAHI;AAIhCC,EAAAA,MAAM,EAAEhC,KAAK,CAAC8B,MAAN,CAAazB;AAJW,CAAZ,CAAxB;;AAOA,MAAM4B,kBAAkB,GAAIC,QAAD,KAAe;AACtC7B,EAAAA,WAAW,EAAEO,GAAG,IAAIsB,QAAQ,CAACvC,UAAU,CAACiB,GAAD,CAAX;AADU,CAAf,CAA3B;;AAIA,eAAelB,OAAO,CAACkC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CrC,YAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { sumExpense } from '../actions/index'\nimport './HeaderWallet.css';\nclass HeaderWallet extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumEx: 0,\n        }\n    }\n\n\n\n    sumExpensesTotal() {\n        const { expenses, sigleCurrence, sumExpenses } = this.props\n        const filterCurrence = Object.values(sigleCurrence).filter((item) => item.name !== 'Dólar Turismo')\n\n        const sum = expenses.map((item) => {\n            return parseFloat(filterCurrence.find((currence) => currence.code === item.currency).ask) * parseFloat(item.value)\n        }).reduce((acc, reduce) => acc + reduce, 0)\n        sumExpenses(sum)\n        return sum\n    }\n    render() {\n        const { email } = this.props\n        const convert = this.sumExpensesTotal().toLocaleString('pt-br', { style: 'currency', currency: 'BRL' });\n\n        return (\n            <header>\n                <p data-testid=\"email-field\" >Email:{email}</p>\n                <p data-testid=\"total-field\" >Total: {convert}</p>\n                <p data-testid=\"header-currency-field\" >BRL</p>\n            </header>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    email: state.user.email,\n    expenses: state.wallet.expenses,\n    sigleCurrence: state.wallet.currencies,\n    sumExp: state.wallet.sumExpenses\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    sumExpenses: sum => dispatch(sumExpense(sum))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderWallet);\n"]},"metadata":{},"sourceType":"module"}