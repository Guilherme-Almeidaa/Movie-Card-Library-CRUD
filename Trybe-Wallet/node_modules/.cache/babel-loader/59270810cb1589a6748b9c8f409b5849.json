{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guisa\\\\Documents\\\\Projetos\\\\Projects-Trybe\\\\Trybe-Wallet\\\\src\\\\components\\\\FormDespesas.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCurrences, saveExpenses } from '../actions/index';\nimport bitcoin from '../imgs/Bitcoin.png';\nimport dolar from '../imgs/dolar.png';\nimport euro from '../imgs/euro.png';\nimport dolarCanadense from '../imgs/dolar-canadense.png';\nimport cartao from '../imgs/cartao.png';\nimport money from '../imgs/money.png';\nimport food from '../imgs/food.png';\nimport saude from '../imgs/saude.png';\n\nclass FormDespesas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n      edit: false\n    };\n    this.handlerChange = this.handlerChange.bind(this);\n    this.expenseSaved = this.expenseSaved.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      requestCurrence\n    } = this.props;\n    requestCurrence();\n  }\n\n  expenseSaved() {\n    const {\n      expensesSave,\n      sigleCurrence,\n      expenses,\n      requestCurrence\n    } = this.props;\n    requestCurrence();\n    this.setState({\n      id: expenses.length,\n      exchangeRates: { ...sigleCurrence\n      }\n    }, () => expensesSave(this.state));\n  }\n\n  handlerChange({\n    target\n  }) {\n    const {\n      value,\n      name\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  selectedImg(coin) {\n    if (coin === 'USD') {\n      return dolar;\n    } else if (coin === 'EUR') {\n      return euro;\n    } else if (coin === 'BTC') {\n      return bitcoin;\n    } else if (coin === 'CAD') {\n      return dolarCanadense;\n    } else {\n      return '';\n    }\n  }\n\n  selectedImgTag(tag) {\n    if (tag === 'Alimentação') {\n      return food;\n    } else if (tag === 'Saúde') {\n      return saude;\n    } else {\n      return '';\n    }\n  }\n\n  render() {\n    const {\n      sigleCurrence\n    } = this.props;\n    const {\n      currency,\n      method,\n      tag\n    } = this.state;\n    const currenceFilter = Object.values(sigleCurrence).filter(item => item.name !== 'Dólar Turismo');\n    const moedas = ['USD', 'EUR', 'BTC', 'CAD'];\n    const tags = ['Alimentação', 'Saúde'];\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"valor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      onChange: this.handlerChange,\n      name: \"value\",\n      id: \"valor\",\n      \"data-testid\": \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"descricao\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handlerChange,\n      name: \"description\",\n      id: \"descricao\",\n      \"data-testid\": \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"moeda\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handlerChange,\n      name: \"currency\",\n      id: \"moeda\",\n      \"data-testid\": \"currency-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, currenceFilter.map(currence => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: currence.code,\n        \"data-testid\": currence.code,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }\n      }, currence.code);\n    }))), moedas.includes(currency) ? /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-coin\",\n      alt: \"moeda\",\n      src: this.selectedImg(currency),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 46\n      }\n    }) : '', /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"M\\xE9todo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handlerChange,\n      name: \"method\",\n      \"data-testid\": \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-coin-2\",\n      alt: \"metodo\",\n      src: method === 'Dinheiro' ? money : cartao,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Categoria:\", /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handlerChange,\n      name: \"tag\",\n      \"data-testid\": \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"Sa\\xFAde\"))), tags.includes(tag) ? /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"tag\",\n      className: \"img-coin\",\n      src: this.selectedImgTag(tag),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 39\n      }\n    }) : '', /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button is-primary add\",\n      type: \"button\",\n      onClick: this.expenseSaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, \"Adicionar\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  sigleCurrence: state.wallet.currencies,\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestCurrence: () => dispatch(fetchCurrences()),\n  expensesSave: expense => dispatch(saveExpenses(expense))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDespesas);","map":{"version":3,"sources":["C:/Users/guisa/Documents/Projetos/Projects-Trybe/Trybe-Wallet/src/components/FormDespesas.js"],"names":["React","connect","fetchCurrences","saveExpenses","bitcoin","dolar","euro","dolarCanadense","cartao","money","food","saude","FormDespesas","Component","constructor","props","state","id","value","description","currency","method","tag","exchangeRates","edit","handlerChange","bind","expenseSaved","componentDidMount","requestCurrence","expensesSave","sigleCurrence","expenses","setState","length","target","name","selectedImg","coin","selectedImgTag","render","currenceFilter","Object","values","filter","item","moedas","tags","map","currence","code","includes","mapStateToProps","wallet","currencies","mapDispatchToProps","dispatch","expense"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCurrences, saveExpenses } from '../actions/index';\r\nimport bitcoin from '../imgs/Bitcoin.png';\r\nimport dolar from '../imgs/dolar.png';\r\nimport euro from '../imgs/euro.png';\r\nimport dolarCanadense from '../imgs/dolar-canadense.png';\r\nimport cartao from '../imgs/cartao.png';\r\nimport money from '../imgs/money.png';\r\nimport food from '../imgs/food.png';\r\nimport saude from '../imgs/saude.png';\r\n\r\n\r\nclass FormDespesas extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: 0,\r\n            value: 0,\r\n            description: '',\r\n            currency: 'USD',\r\n            method: 'Dinheiro',\r\n            tag: 'Alimentação',\r\n            exchangeRates: {},\r\n            edit: false,\r\n        };\r\n        this.handlerChange = this.handlerChange.bind(this);\r\n        this.expenseSaved = this.expenseSaved.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { requestCurrence } = this.props;\r\n        requestCurrence()\r\n    }\r\n    expenseSaved() {\r\n        const { expensesSave, sigleCurrence, expenses ,requestCurrence } = this.props\r\n        requestCurrence()\r\n        this.setState({\r\n            id: expenses.length,\r\n            exchangeRates: { ...sigleCurrence }\r\n        }, () => expensesSave(this.state))\r\n\r\n    }\r\n\r\n    handlerChange({ target }) {\r\n        const { value, name } = target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    \r\n    selectedImg(coin) {\r\n        if (coin === 'USD') {\r\n            return dolar\r\n        } else if (coin === 'EUR') {\r\n            return euro\r\n        } else if (coin === 'BTC') {\r\n            return bitcoin\r\n        } else if (coin === 'CAD') {\r\n            return dolarCanadense\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    selectedImgTag (tag) {\r\n        if(tag === 'Alimentação') {\r\n            return food\r\n        } else if (tag === 'Saúde') {\r\n            return saude\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { sigleCurrence } = this.props\r\n        const { currency, method , tag } = this.state;\r\n        const currenceFilter = Object.values(sigleCurrence).filter((item) => item.name !== 'Dólar Turismo')\r\n        const moedas = ['USD' , 'EUR' , 'BTC' , 'CAD']\r\n        const tags = ['Alimentação' , 'Saúde']\r\n        \r\n        return (\r\n            \r\n            <form className=\"form\" >\r\n                \r\n                <label htmlFor=\"valor\" >Valor:\r\n              <input  type=\"number\" min=\"0\" onChange={this.handlerChange} name=\"value\" id=\"valor\" data-testid=\"value-input\" />\r\n                </label>\r\n                <label htmlFor=\"descricao\" >Descrição:\r\n              <input type=\"text\" onChange={this.handlerChange} name=\"description\" id=\"descricao\" data-testid=\"description-input\" />\r\n                </label>\r\n                <label htmlFor=\"moeda\" >Moeda:\r\n              <select onChange={this.handlerChange} name=\"currency\" id=\"moeda\" data-testid=\"currency-input\" >\r\n                        {currenceFilter.map((currence) => {\r\n                            return (\r\n                                < option key={currence.code} data-testid={currence.code} >\r\n                                    {currence.code}\r\n                                </option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n                    \r\n                </label>\r\n                {moedas.includes(currency) ? <img className=\"img-coin\" alt=\"moeda\" src={this.selectedImg(currency)} ></img> : ''}\r\n                <label>Método de pagamento:\r\n                    <select onChange={this.handlerChange} name=\"method\" data-testid=\"method-input\" >\r\n                        <option value=\"Dinheiro\" >Dinheiro</option>\r\n                        <option value=\"Cartão de crédito\" >Cartão de crédito</option>\r\n                        <option value=\"Cartão de débito\" >Cartão de débito</option>\r\n                    </select>\r\n                </label>\r\n                <img className=\"img-coin-2\" alt=\"metodo\" src={method === 'Dinheiro' ? money : cartao} ></img>\r\n                <label>Categoria:\r\n                    <select onChange={this.handlerChange} name=\"tag\" data-testid=\"tag-input\"  >\r\n                        <option value=\"Alimentação\" >Alimentação</option>\r\n                        <option value=\"Lazer\" >Lazer</option>\r\n                        <option value=\"Trabalho\" >Trabalho</option>\r\n                        <option value=\"Transporte\" >Transporte</option>\r\n                        <option value=\"Saúde\" >Saúde</option>\r\n                    </select>\r\n                </label>\r\n                {tags.includes(tag) ? <img alt=\"tag\" className=\"img-coin\" src={this.selectedImgTag(tag)}/> : ''}\r\n                <button className=\"button is-primary add\" type=\"button\" onClick={this.expenseSaved} >Adicionar</button>\r\n            </form>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sigleCurrence: state.wallet.currencies,\r\n    expenses: state.wallet.expenses\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    requestCurrence: () => dispatch(fetchCurrences()),\r\n    expensesSave: (expense) => dispatch(saveExpenses(expense))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDespesas);"]},"metadata":{},"sourceType":"module"}