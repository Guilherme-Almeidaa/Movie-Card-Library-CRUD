{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Refatra\\xE7\\xE3o-Projetos/sd-07-project-trybewallet/src/components/TableInfo.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { sumExpense } from '../actions/index';\n\nclass TableInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deleted: false\n    };\n    this.deleteExpense = this.deleteExpense.bind(this);\n  }\n\n  deleteExpense(index) {\n    const {\n      expenses,\n      sigleCurrence,\n      sumExpenses\n    } = this.props;\n    expenses.splice(index, 1);\n    this.setState({\n      deleted: true\n    });\n    const filterCurrence = Object.values(sigleCurrence).filter(item => item.name !== 'Dólar Turismo');\n    const sum = expenses.map(item => {\n      return parseFloat(filterCurrence.find(currence => currence.code === item.currency).ask) * parseFloat(item.value);\n    }).reduce((acc, reduce) => acc + reduce, 0);\n    sumExpenses(sum);\n    return sum;\n  }\n\n  isSelected(target) {\n    target.className = \"is-selected\";\n  }\n\n  render() {\n    const {\n      expenses\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"Editar/Excluir\"))), expenses.map((item, index) => {\n      const {\n        currency,\n        exchangeRates\n      } = item;\n      const convert = (exchangeRates[currency].ask * item.value).toLocaleString('pt-br', {\n        style: 'currency',\n        currency: 'BRL'\n      });\n      return /*#__PURE__*/React.createElement(\"tbody\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        onClickCapture: this.isSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, item.tag), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, item.method), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, item.value), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      }, exchangeRates[currency].name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, Number(exchangeRates[currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, convert), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        class: \"delete is-small\",\n        type: \"button\",\n        onClick: () => this.deleteExpense(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      }, \"Editar\"))));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses,\n  sigleCurrence: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sumExpenses: sum => dispatch(sumExpense(sum))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableInfo);","map":{"version":3,"sources":["/home/guilherme/Refatração-Projetos/sd-07-project-trybewallet/src/components/TableInfo.js"],"names":["React","connect","sumExpense","TableInfo","Component","constructor","props","state","deleted","deleteExpense","bind","index","expenses","sigleCurrence","sumExpenses","splice","setState","filterCurrence","Object","values","filter","item","name","sum","map","parseFloat","find","currence","code","currency","ask","value","reduce","acc","isSelected","target","className","render","exchangeRates","convert","toLocaleString","style","description","tag","method","Number","toFixed","mapStateToProps","wallet","currencies","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { sumExpense } from '../actions/index'\n\n\nclass TableInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleted: false,\n        }\n\n        this.deleteExpense = this.deleteExpense.bind(this);\n    }\n\n\n\n    deleteExpense(index) {\n        const { expenses, sigleCurrence, sumExpenses } = this.props\n        expenses.splice(index, 1)\n        this.setState({\n            deleted: true\n        })\n        const filterCurrence = Object.values(sigleCurrence).filter((item) => item.name !== 'Dólar Turismo')\n        const sum = expenses.map((item) => {\n            return parseFloat(filterCurrence.find((currence) => currence.code === item.currency).ask) * parseFloat(item.value)\n        }).reduce((acc, reduce) => acc + reduce, 0)\n        sumExpenses(sum)\n        return sum\n\n    }\n\n    isSelected (target) {\n        target.className=\"is-selected\"\n    }\n\n    render() {\n        const { expenses } = this.props\n\n        return (\n\n            <table className=\"table\" >\n                <thead>\n                    <tr>\n                        <td>Descrição</td>\n                        <td>Tag</td>\n                        <td>Método de pagamento</td>\n                        <td>Valor</td>\n                        <td>Moeda</td>\n                        <td>Câmbio utilizado</td>\n                        <td>Valor convertido</td>\n                        <td>Moeda de conversão</td>\n                        <td>Editar/Excluir</td>\n                    </tr>\n                </thead>\n                {expenses.map((item, index) => {\n                    const { currency, exchangeRates } = item\n                    const convert = (exchangeRates[currency].ask * item.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' });\n                    return (\n                        <tbody key={index} >\n                            <tr onClickCapture={this.isSelected} >\n                                <td>{item.description}</td>\n                                <td>{item.tag}</td>\n                                <td>{item.method}</td>\n                                <td>{item.value}</td>\n                                <td>{exchangeRates[currency].name}</td>\n                                <td>{Number(exchangeRates[currency].ask).toFixed(2)}</td>\n                                <td>{convert}</td>\n                                <td>Real</td>\n                                <td>\n                                    <button class=\"delete is-small\" type=\"button\" onClick={() => this.deleteExpense(index)} ></button>\n                                    <button type=\"button\">Editar</button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    )\n                })}\n\n\n            </table>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    expenses: state.wallet.expenses,\n    sigleCurrence: state.wallet.currencies,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    sumExpenses: sum => dispatch(sumExpense(sum)),\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableInfo);"]},"metadata":{},"sourceType":"module"}