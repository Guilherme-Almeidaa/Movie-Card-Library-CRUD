{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guisa\\\\Documents\\\\Projetos\\\\Projects-Trybe\\\\Trybe-Wallet\\\\src\\\\components\\\\TableInfo.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { sumExpense } from '../actions/index';\nimport bitcoin from '../imgs/Bitcoin.png';\nimport dolar from '../imgs/dolar.png';\nimport euro from '../imgs/euro.png';\nimport dolarCanadense from '../imgs/dolar-canadense.png';\n\nclass TableInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deleted: false\n    };\n    this.deleteExpense = this.deleteExpense.bind(this);\n  }\n\n  deleteExpense(index) {\n    const {\n      expenses,\n      sigleCurrence,\n      sumExpenses\n    } = this.props;\n    expenses.splice(index, 1);\n    this.setState({\n      deleted: true\n    });\n    const filterCurrence = Object.values(sigleCurrence).filter(item => item.name !== 'DÃ³lar Turismo');\n    const sum = expenses.map(item => {\n      return parseFloat(filterCurrence.find(currence => currence.code === item.currency).ask) * parseFloat(item.value);\n    }).reduce((acc, reduce) => acc + reduce, 0);\n    sumExpenses(sum);\n    return sum;\n  }\n\n  isSelected(e) {\n    if (e.target.className === 'item-table is-selected') {\n      e.target.className = '';\n    } else {\n      e.target.className = 'item-table is-selected';\n    }\n  }\n\n  selectedImg(coin) {\n    if (coin === 'USD') {\n      return dolar;\n    } else if (coin === 'EUR') {\n      return euro;\n    } else if (coin === 'BTC') {\n      return bitcoin;\n    } else if (coin === 'CAD') {\n      return dolarCanadense;\n    } else {\n      return '';\n    }\n  }\n\n  render() {\n    const {\n      expenses\n    } = this.props;\n    const moedas = ['USD', 'EUR', 'BTC', 'CAD'];\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"Editar/Excluir\"))), expenses.map((item, index) => {\n      const {\n        currency,\n        exchangeRates\n      } = item;\n      const convert = (exchangeRates[currency].ask * item.value).toLocaleString('pt-br', {\n        style: 'currency',\n        currency: 'BRL'\n      });\n      return /*#__PURE__*/React.createElement(\"tbody\", {\n        onClick: this.isSelected,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"item-table is-selected\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }, item.tag), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, item.method), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }\n      }, item.value), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, moedas.includes(currency) ? /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-coin\",\n        alt: \"moeda\",\n        src: this.selectedImg(exchangeRates[currency].code),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 66\n        }\n      }) : '', \" \", exchangeRates[currency].name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }, Number(exchangeRates[currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }\n      }, convert), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"edit button\",\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"delete button is-primary\",\n        type: \"button\",\n        onClick: () => this.deleteExpense(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 37\n        }\n      }))));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses,\n  sigleCurrence: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sumExpenses: sum => dispatch(sumExpense(sum))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableInfo);","map":{"version":3,"sources":["C:/Users/guisa/Documents/Projetos/Projects-Trybe/Trybe-Wallet/src/components/TableInfo.js"],"names":["React","connect","sumExpense","bitcoin","dolar","euro","dolarCanadense","TableInfo","Component","constructor","props","state","deleted","deleteExpense","bind","index","expenses","sigleCurrence","sumExpenses","splice","setState","filterCurrence","Object","values","filter","item","name","sum","map","parseFloat","find","currence","code","currency","ask","value","reduce","acc","isSelected","e","target","className","selectedImg","coin","render","moedas","exchangeRates","convert","toLocaleString","style","description","tag","method","includes","Number","toFixed","mapStateToProps","wallet","currencies","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { sumExpense } from '../actions/index'\r\nimport bitcoin from '../imgs/Bitcoin.png';\r\nimport dolar from '../imgs/dolar.png';\r\nimport euro from '../imgs/euro.png';\r\nimport dolarCanadense from '../imgs/dolar-canadense.png';\r\n\r\n\r\nclass TableInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            deleted: false,\r\n        }\r\n\r\n        this.deleteExpense = this.deleteExpense.bind(this);\r\n    }\r\n\r\n\r\n\r\n    deleteExpense(index) {\r\n        const { expenses, sigleCurrence, sumExpenses } = this.props\r\n        expenses.splice(index, 1)\r\n        this.setState({\r\n            deleted: true\r\n        })\r\n        const filterCurrence = Object.values(sigleCurrence).filter((item) => item.name !== 'DÃ³lar Turismo')\r\n        const sum = expenses.map((item) => {\r\n            return parseFloat(filterCurrence.find((currence) => currence.code === item.currency).ask) * parseFloat(item.value)\r\n        }).reduce((acc, reduce) => acc + reduce, 0)\r\n        sumExpenses(sum)\r\n        return sum\r\n\r\n    }\r\n\r\n    isSelected(e) {\r\n\r\n        if (e.target.className === 'item-table is-selected') {\r\n            e.target.className = ''\r\n        } else {\r\n            e.target.className = 'item-table is-selected'\r\n        }\r\n    }\r\n\r\n    selectedImg(coin) {\r\n        if (coin === 'USD') {\r\n            return dolar\r\n        } else if (coin === 'EUR') {\r\n            return euro\r\n        } else if (coin === 'BTC') {\r\n            return bitcoin\r\n        } else if (coin === 'CAD') {\r\n            return dolarCanadense\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { expenses } = this.props\r\n        const moedas = ['USD' , 'EUR' , 'BTC' , 'CAD']\r\n        return (\r\n\r\n            <table className=\"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\" >\r\n                <thead>\r\n                    <tr>\r\n                        <td>DescriÃ§Ã£o</td>\r\n                        <td>Tag</td>\r\n                        <td>MÃ©todo de pagamento</td>\r\n                        <td>Valor</td>\r\n                        <td>Moeda</td>\r\n                        <td>CÃ¢mbio utilizado</td>\r\n                        <td>Valor convertido</td>\r\n                        <td>Moeda de conversÃ£o</td>\r\n                        <td>Editar/Excluir</td>\r\n                    </tr>\r\n                </thead>\r\n                {expenses.map((item, index) => {\r\n                    const { currency, exchangeRates } = item\r\n                    const convert = (exchangeRates[currency].ask * item.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' });\r\n                    return (\r\n                        <tbody  onClick={this.isSelected} key={index} >\r\n                            <tr className=\"item-table is-selected\"  >\r\n                                <td>{item.description}</td>\r\n                                <td>{item.tag}</td>\r\n                                <td>{item.method}</td>\r\n                                <td>{item.value}</td>\r\n                                <td>{moedas.includes(currency) ? <img className=\"img-coin\" alt=\"moeda\" src={this.selectedImg(exchangeRates[currency].code)} /> : ''} {exchangeRates[currency].name}</td>\r\n                                <td>{Number(exchangeRates[currency].ask).toFixed(2)}</td>\r\n                                <td>{convert}</td>\r\n                                <td>Real</td>\r\n                                <td>\r\n                                    <button className=\"edit button\" type=\"button\"></button>\r\n                                    <button className=\"delete button is-primary\" type=\"button\" onClick={() => this.deleteExpense(index)} ></button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    )\r\n                })}\r\n\r\n\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    expenses: state.wallet.expenses,\r\n    sigleCurrence: state.wallet.currencies,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sumExpenses: sum => dispatch(sumExpense(sum)),\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableInfo);"]},"metadata":{},"sourceType":"module"}