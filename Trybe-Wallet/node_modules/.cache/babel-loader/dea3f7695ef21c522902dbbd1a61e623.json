{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Refatra\\xE7\\xE3o-Projetos/sd-07-project-trybewallet/src/components/HeaderWallet.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCurrences, sumExpense } from '../actions/index';\nimport './HeaderWallet.css';\n\nclass HeaderWallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sumEx: 0\n    };\n    this.sumExpensesTotal = this.sumExpensesTotal.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      requestCurrence\n    } = this.props;\n    requestCurrence();\n  }\n\n  sumExpensesTotal() {\n    const {\n      expenses,\n      sigleCurrence\n    } = this.props;\n    const filterCurrence = Object.values(sigleCurrence).filter(item => item.name !== 'Dólar Turismo');\n    const sum = expenses.map(item => {\n      return parseFloat(filterCurrence.find(currence => currence.code === item.currency).ask) * parseFloat(item.value);\n    }).reduce((acc, reduce) => acc + reduce, 0);\n    return sum;\n  }\n\n  render() {\n    const {\n      email,\n      expenses\n    } = this.props;\n    const convert = this.sumExpensesTotal().toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL'\n    });\n    console.log(expenses);\n    return /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Email:\", email), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Total: \", convert), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"BRL\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n  sigleCurrence: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sumExpenses: sum => dispatch(sumExpense(sum)),\n  requestCurrence: () => dispatch(fetchCurrences())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderWallet);","map":{"version":3,"sources":["/home/guilherme/Refatração-Projetos/sd-07-project-trybewallet/src/components/HeaderWallet.js"],"names":["React","connect","fetchCurrences","sumExpense","HeaderWallet","Component","constructor","props","state","sumEx","sumExpensesTotal","bind","componentDidMount","requestCurrence","expenses","sigleCurrence","filterCurrence","Object","values","filter","item","name","sum","map","parseFloat","find","currence","code","currency","ask","value","reduce","acc","render","email","convert","toLocaleString","style","console","log","mapStateToProps","user","wallet","currencies","mapDispatchToProps","dispatch","sumExpenses"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA4C,kBAA5C;AACA,OAAO,oBAAP;;AACA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAsB,KAAKN,KAAjC;AACAM,IAAAA,eAAe;AAClB;;AAEDH,EAAAA,gBAAgB,GAAG;AACf,UAAM;AAAEI,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA8B,KAAKR,KAAzC;AACA,UAAMS,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAcH,aAAd,EAA6BI,MAA7B,CAAqCC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,eAA5D,CAAvB;AACA,UAAMC,GAAG,GAAGR,QAAQ,CAACS,GAAT,CAAcH,IAAD,IAAU;AAC/B,aAAOI,UAAU,CAACR,cAAc,CAACS,IAAf,CAAqBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,KAAkBP,IAAI,CAACQ,QAAzD,EAAmEC,GAApE,CAAV,GAAqFL,UAAU,CAACJ,IAAI,CAACU,KAAN,CAAtG;AACH,KAFW,EAETC,MAFS,CAEF,CAACC,GAAD,EAAMD,MAAN,KAAiBC,GAAG,GAAGD,MAFrB,EAE6B,CAF7B,CAAZ;AAIA,WAAOT,GAAP;AACH;;AACDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASpB,MAAAA;AAAT,QAAsB,KAAKP,KAAjC;AACA,UAAM4B,OAAO,GAAG,KAAKzB,gBAAL,GAAwB0B,cAAxB,CAAuC,OAAvC,EAAgD;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBT,MAAAA,QAAQ,EAAE;AAA/B,KAAhD,CAAhB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYzB,QAAZ;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqCoB,KAArC,CADJ,eAEI;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsCC,OAAtC,CAFJ,eAGI;AAAG,qBAAY,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CADJ;AAOH;;AAlCsC;;AAoC3C,MAAMK,eAAe,GAAIhC,KAAD,KAAY;AAChC0B,EAAAA,KAAK,EAAE1B,KAAK,CAACiC,IAAN,CAAWP,KADc;AAEhCpB,EAAAA,QAAQ,EAAEN,KAAK,CAACkC,MAAN,CAAa5B,QAFS;AAGhCC,EAAAA,aAAa,EAAEP,KAAK,CAACkC,MAAN,CAAaC;AAHI,CAAZ,CAAxB;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCC,EAAAA,WAAW,EAAExB,GAAG,IAAIuB,QAAQ,CAAC1C,UAAU,CAACmB,GAAD,CAAX,CADU;AAEtCT,EAAAA,eAAe,EAAE,MAAMgC,QAAQ,CAAC3C,cAAc,EAAf;AAFO,CAAf,CAA3B;;AAKA,eAAeD,OAAO,CAACuC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CxC,YAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCurrences, sumExpense  } from '../actions/index'\nimport './HeaderWallet.css';\nclass HeaderWallet extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sumEx: 0,\n        }\n        this.sumExpensesTotal = this.sumExpensesTotal.bind(this);\n    }\n\n    componentDidMount() {\n        const { requestCurrence } = this.props;\n        requestCurrence()\n    }\n\n    sumExpensesTotal() {\n        const { expenses, sigleCurrence } = this.props\n        const filterCurrence = Object.values(sigleCurrence).filter((item) => item.name !== 'Dólar Turismo')\n        const sum = expenses.map((item) => {\n            return parseFloat(filterCurrence.find((currence) => currence.code === item.currency).ask) * parseFloat(item.value)\n        }).reduce((acc, reduce) => acc + reduce, 0)\n\n        return sum\n    }\n    render() {\n        const { email, expenses } = this.props\n        const convert = this.sumExpensesTotal().toLocaleString('pt-br', { style: 'currency', currency: 'BRL' });\n        console.log(expenses)\n        return (\n            <header>\n                <p data-testid=\"email-field\" >Email:{email}</p>\n                <p data-testid=\"total-field\" >Total: {convert}</p>\n                <p data-testid=\"header-currency-field\" >BRL</p>\n            </header>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    email: state.user.email,\n    expenses: state.wallet.expenses,\n    sigleCurrence: state.wallet.currencies,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    sumExpenses: sum => dispatch(sumExpense(sum)),\n    requestCurrence: () => dispatch(fetchCurrences()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderWallet);\n"]},"metadata":{},"sourceType":"module"}