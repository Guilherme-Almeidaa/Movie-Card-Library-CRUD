{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Trybe/Projetos-trybe/sd-07-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as movieAPI from '../services/movieAPI';\nimport Loading from '../components/Loading';\nimport { MovieForm } from '../components';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      id\n    } = this.props.match.params;\n    this.state = {\n      status: 'loading',\n      shouldRedirect: false,\n      movie: [],\n      movieId: id\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchMovie = this.fetchMovie.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMovie(this.state.movieId);\n  }\n\n  async fetchMovie(id) {\n    this.setState({\n      movie: await movieAPI.getMovie(id),\n      status: ''\n    });\n  }\n\n  async handleSubmit(updatedMovie) {\n    this.setState({\n      shouldRedirect: true\n    });\n    await movieAPI.updateMovie(updatedMovie);\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (status === 'loading') {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default EditMovie;\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["Redirect","PropTypes","React","Component","movieAPI","Loading","MovieForm","EditMovie","constructor","props","id","match","params","state","status","shouldRedirect","movie","movieId","handleSubmit","bind","fetchMovie","componentDidMount","setState","getMovie","updatedMovie","updateMovie","render","propTypes","shape","string","isRequired"],"mappings":";AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,QAA0B,eAA1B;;AAGA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAhC;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,SADG;AAEXC,MAAAA,cAAc,EAAE,KAFL;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,OAAO,EAAEP;AAJE,KAAb;AAMA,SAAKQ,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,UAAL,CAAgB,KAAKP,KAAL,CAAWI,OAA3B;AACD;;AAED,QAAMG,UAAN,CAAiBV,EAAjB,EAAqB;AACnB,SAAKY,QAAL,CAAc;AACZN,MAAAA,KAAK,EAAE,MAAMZ,QAAQ,CAACmB,QAAT,CAAkBb,EAAlB,CADD;AAEZI,MAAAA,MAAM,EAAE;AAFI,KAAd;AAID;;AAED,QAAMI,YAAN,CAAmBM,YAAnB,EAAiC;AAC/B,SAAKF,QAAL,CAAc;AACZP,MAAAA,cAAc,EAAE;AADJ,KAAd;AAGA,UAAMX,QAAQ,CAACqB,WAAT,CAAqBD,YAArB,CAAN;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,MAAF;AAAUC,MAAAA,cAAV;AAA0BC,MAAAA;AAA1B,QAAoC,KAAKH,KAA/C;;AACA,QAAIE,cAAJ,EAAoB;AAClB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAID,MAAM,KAAK,SAAf,EAA0B;AACxB,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEE,KAAlB;AAAyB,MAAA,QAAQ,EAAE,KAAKE,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA/C+B;;AAkDlC,eAAeX,SAAf;AAEAA,SAAS,CAACoB,SAAV,GAAsB;AACpBhB,EAAAA,KAAK,EAAEV,SAAS,CAAC2B,KAAV,CAAgB;AACrBhB,IAAAA,MAAM,EAAEX,SAAS,CAAC2B,KAAV,CAAgB;AACtBlB,MAAAA,EAAE,EAAET,SAAS,CAAC4B;AADQ,KAAhB;AADa,GAAhB,EAIJC;AALiB,CAAtB","sourcesContent":["import { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as movieAPI from '../services/movieAPI';\nimport Loading from '../components/Loading';\nimport { MovieForm } from '../components';\n\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n    this.state = {\n      status: 'loading',\n      shouldRedirect: false,\n      movie: [],\n      movieId: id,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchMovie = this.fetchMovie.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMovie(this.state.movieId);\n  }\n\n  async fetchMovie(id) {\n    this.setState({\n      movie: await movieAPI.getMovie(id),\n      status: '',\n    });\n  }\n\n  async handleSubmit(updatedMovie) {\n    this.setState({\n      shouldRedirect: true,\n    });\n    await movieAPI.updateMovie(updatedMovie);\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={movie} onSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default EditMovie;\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}