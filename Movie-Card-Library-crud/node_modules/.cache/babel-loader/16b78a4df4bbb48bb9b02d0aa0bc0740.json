{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Trybe/Projetos-trybe/sd-07-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport PropsTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      id\n    } = this.props.match.params;\n    this.state = {\n      movie: [],\n      loading: true,\n      movieId: id,\n      redirect: false\n    };\n    this.movieDetails = this.movieDetails.bind(this);\n    this.movieDelete = this.movieDelete.bind(this);\n  }\n\n  componentDidMount() {\n    this.movieDetails();\n  }\n\n  async movieDetails() {\n    this.setState({\n      movie: await movieAPI.getMovie(this.state.movieId),\n      loading: false\n    });\n  }\n\n  movieDelete(movieId) {\n    this.setState({\n      redirect: true\n    });\n    movieAPI.deleteMovie(movieId);\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n    const {\n      id\n    } = this.props.match.params;\n    const {\n      loading,\n      movie,\n      redirect\n    } = this.state;\n    if (loading) return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    });\n    if (redirect) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 26\n      }\n    });\n    const {\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle\n    } = movie;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, `Title:${title}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, `Rating: ${rating}`), /*#__PURE__*/React.createElement(Link, {\n      to: `/movies/${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"EDITAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"VOLTAR\"), /*#__PURE__*/React.createElement(Link, {\n      onClick: () => this.movieDelete(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"DELETAR\"));\n  }\n\n}\n\nexport default MovieDetails;\nMovieDetails.propTypes = {\n  match: PropsTypes.shape({\n    params: PropsTypes.shape({\n      id: PropsTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/home/guilherme/Trybe/Projetos-trybe/sd-07-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","PropsTypes","Link","Redirect","movieAPI","Loading","MovieDetails","constructor","props","id","match","params","state","movie","loading","movieId","redirect","movieDetails","bind","movieDelete","componentDidMount","setState","getMovie","deleteMovie","render","title","storyline","imagePath","genre","rating","subtitle","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropsTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      movie: [],\n      loading: true,\n      movieId: id,\n      redirect: false,\n    };\n    this.movieDetails = this.movieDetails.bind(this);\n    this.movieDelete = this.movieDelete.bind(this)\n  }\n\n  componentDidMount() {\n    this.movieDetails();\n\n  }\n\n  async movieDetails() {\n    this.setState({\n      movie: await movieAPI.getMovie(this.state.movieId),\n      loading: false,\n    });\n  }\n\n  movieDelete(movieId) {\n    this.setState({\n      redirect: true,\n    })\n    movieAPI.deleteMovie(movieId)\n  }\n  \n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n    const { id } = this.props.match.params;\n    const { loading, movie, redirect } = this.state;\n    if (loading) return <Loading />;\n    if (redirect) return <Redirect to=\"/\" />\n\n    const { title, storyline, imagePath, genre, rating, subtitle } = movie;\n\n    return (\n      <div data-testid=\"movie-details\">\n        <img alt=\"Movie Cover\" src={`../${imagePath}`} />\n        <p>{`Title:${title}`}</p>\n        <p>{`Subtitle: ${subtitle}`}</p>\n        <p>{`Storyline: ${storyline}`}</p>\n        <p>{`Genre: ${genre}`}</p>\n        <p>{`Rating: ${rating}`}</p>\n        <Link to={`/movies/${id}/edit`} >EDITAR</Link>\n        <Link to=\"/\" >VOLTAR</Link>\n        <Link onClick={() => this.movieDelete(id)} >DELETAR</Link>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  match: PropsTypes.shape({\n    params: PropsTypes.shape({\n      id: PropsTypes.string,\n    }),\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}